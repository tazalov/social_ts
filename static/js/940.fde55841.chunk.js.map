{"version":3,"file":"static/js/940.fde55841.chunk.js","mappings":"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","sources":["pages/users/user/User.styled.ts","pages/users/user/User.tsx","pages/users/Users.styled.ts","pages/users/UsersContainer.tsx","utils/hoc/redirectToLogin.tsx","utils/string/getShortString.ts"],"sourcesContent":["import styled from 'styled-components'\r\n\r\nimport { C } from '../../../app/styles/Common.styled'\r\nimport { F } from '../../../app/styles/Fragments.styled'\r\n\r\nconst User = styled(C.FlexWrapper)`\r\n  padding: 10px;\r\n  transition: all 0.3s ease;\r\n  &:hover {\r\n    background-color: ${(props) => props.theme.colors.thirdBg};\r\n  }\r\n`\r\n\r\nconst Name = styled.div`\r\n  ${F.Subtitle};\r\n  font-size: 22px;\r\n`\r\n\r\nconst Status = styled.div`\r\n  color: ${(props) => {\r\n    const { name, colors } = props.theme\r\n    return name === 'light' ? colors.primaryFont : colors.secondaryFont\r\n  }};\r\n  font-size: 14px;\r\n`\r\n\r\nexport const S = {\r\n  User,\r\n  Name,\r\n  Status,\r\n}\r\n","import { FC } from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nimport { S } from './User.styled'\r\n\r\nimport photo from '../../../app/assets/images/anynft.webp'\r\nimport { Avatar, ButtonB, Loading } from '../../../components'\r\nimport { ProgressFollowT, UserT } from '../../../redux/users-reducer'\r\nimport { getShortString } from '../../../utils/string/getShortString'\r\n\r\ninterface UserPT {\r\n  user: UserT\r\n  follow: (id: number) => void\r\n  unfollow: (id: number) => void\r\n  progressFollow: ProgressFollowT\r\n}\r\n\r\nexport const User: FC<UserPT> = ({ user, follow, unfollow, progressFollow }) => {\r\n  const { id, name, status, followed, photos } = user\r\n\r\n  const newStatus = status ? getShortString(status, 15) : 'No status'\r\n  const followUser = () => follow(id)\r\n  const unfollowUser = () => unfollow(id)\r\n\r\n  return (\r\n    <S.User $direction={'column'} $align={'center'} $gap={'20px'}>\r\n      <NavLink to={`/profile/${id}`}>\r\n        <Avatar img={photos.small || photo} w={100} h={100} />\r\n      </NavLink>\r\n      <S.Name>{getShortString(name, 10)}</S.Name>\r\n      <S.Status>{newStatus}</S.Status>\r\n      {progressFollow.userId.some((el) => el === id) ? (\r\n        <Loading />\r\n      ) : (\r\n        <ButtonB\r\n          title={followed ? 'unfollow' : 'follow'}\r\n          callback={followed ? unfollowUser : followUser}\r\n          disable={progressFollow.userId.includes(id)}\r\n        />\r\n      )}\r\n    </S.User>\r\n  )\r\n}\r\n","import styled from 'styled-components'\r\n\r\nimport { C } from '../../app/styles/Common.styled'\r\n\r\nconst Users = styled(C.ShadowContainer)`\r\n  margin-top: 20px;\r\n  display: grid;\r\n  grid-template-columns: repeat(5, 1fr);\r\n`\r\n\r\nexport const S = {\r\n  Users,\r\n}\r\n","import { Component, ComponentType } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { compose } from 'redux'\r\n\r\nimport { User } from './user/User'\r\n\r\nimport { S } from './Users.styled'\r\n\r\nimport { Pagination2, Preloader } from '../../components'\r\nimport { RootStateT } from '../../redux/store'\r\nimport { getUsers, getUsersState, setCurrentPage, setFollow, setUnfollow, UsersST } from '../../redux/users-reducer'\r\n\r\nimport { redirectToLogin } from '../../utils/hoc/redirectToLogin'\r\n\r\ntype UsersCPT = UsersST & MapDispatchPT\r\n\r\n//TODO shouldComponentUpdate & memo - когда будем пилить филтрацию.\r\n\r\nclass UsersC extends Component<UsersCPT> {\r\n  componentDidMount() {\r\n    const { list, pageSize, currentPage, getUsers } = this.props\r\n    if (!list.length) {\r\n      getUsers(currentPage, pageSize)\r\n    }\r\n    document.title = 'Users'\r\n  }\r\n  componentDidUpdate(prevProps: Readonly<UsersCPT>) {\r\n    const { pageSize, currentPage, getUsers } = this.props\r\n    if (currentPage !== prevProps.currentPage) {\r\n      getUsers(currentPage, pageSize)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let {\r\n      list,\r\n      totalCount,\r\n      pageSize,\r\n      currentPage,\r\n      isPageLoading,\r\n      setFollow,\r\n      setUnfollow,\r\n      setCurrentPage,\r\n      progressFollow,\r\n    } = this.props\r\n    return isPageLoading ? (\r\n      <Preloader size={150} />\r\n    ) : (\r\n      <>\r\n        <Pagination2 pageSize={pageSize} currentPage={currentPage} totalCount={totalCount} setPage={setCurrentPage} />\r\n        <S.Users>\r\n          {list.map((el) => (\r\n            <User key={el.id} user={el} follow={setFollow} unfollow={setUnfollow} progressFollow={progressFollow} />\r\n          ))}\r\n        </S.Users>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\ninterface MapDispatchPT {\r\n  setFollow: (id: number) => void\r\n  setUnfollow: (id: number) => void\r\n  setCurrentPage: (page: number) => void\r\n  getUsers: (currentPage: number, pageSize: number) => void\r\n}\r\n\r\nexport default compose<ComponentType>(\r\n  connect<UsersST, MapDispatchPT, unknown, RootStateT>(getUsersState, {\r\n    setFollow,\r\n    setUnfollow,\r\n    setCurrentPage,\r\n    getUsers,\r\n  }),\r\n  redirectToLogin,\r\n)(UsersC)\r\n","import React, { ComponentType, FC } from 'react'\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\n\nimport { AppST } from '../../redux/app-reducer'\nimport { RootStateT } from '../../redux/store'\n\nexport const redirectToLogin = (Component: ComponentType<any>) => {\n  const MyRedirect: FC<MapStatePT> = ({ isAuth, ...restProps }) => {\n    return isAuth ? <Component {...restProps} /> : <Redirect to={'/login'} />\n  }\n\n  type MapStatePT = Pick<AppST, 'isAuth'>\n\n  const mapStateToProps = (state: RootStateT): MapStatePT => ({\n    isAuth: state.app.isAuth,\n  })\n\n  return connect<MapStatePT, unknown, unknown, RootStateT>(mapStateToProps)(MyRedirect)\n}\n","export const getShortString = (str: string, maxLen: number) =>\n  str.length > maxLen ? `${str.slice(0, maxLen - 1)}...` : str\n"],"names":["S","User","styled","C","props","theme","colors","thirdBg","Name","F","Status","name","primaryFont","secondaryFont","user","follow","unfollow","progressFollow","id","status","followed","photos","newStatus","getShortString","$direction","$align","$gap","to","img","small","photo","w","h","userId","some","el","title","callback","disable","includes","Users","UsersC","this","list","pageSize","currentPage","getUsers","length","document","prevProps","totalCount","isPageLoading","setFollow","setUnfollow","setCurrentPage","size","setPage","map","Component","compose","connect","getUsersState","redirectToLogin","state","isAuth","app","restProps","str","maxLen","slice"],"sourceRoot":""}