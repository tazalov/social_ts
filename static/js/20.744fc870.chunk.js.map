{"version":3,"file":"static/js/20.744fc870.chunk.js","mappings":"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","sources":["pages/login/LoginForm.tsx","pages/login/Login.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js"],"sourcesContent":["import { Field, Form, Formik, FormikHelpers } from 'formik'\nimport { FC, useEffect, useState } from 'react'\n\nimport { C } from '../../app/styles/Common.styled'\nimport { Button, ErrorField, Input, Loading } from '../../components'\nimport { LoginSchema } from '../../utils/validators/validators'\n\ninterface LoginFormPT {\n  captcha: string\n  error: string\n  loginUser: (email: string, password: string, rememberMe: boolean, captcha: string) => any\n}\n\nexport const LoginForm: FC<LoginFormPT> = ({ captcha, error, loginUser }) => {\n  const initialFields = {\n    email: '',\n    password: '',\n    captcha: '',\n    remember: false,\n  }\n\n  const [isMounted, setIsMounted] = useState(true)\n\n  useEffect(() => {\n    setIsMounted(true)\n\n    return () => {\n      setIsMounted(false)\n    }\n  }, [])\n\n  const onSubmit = (values: typeof initialFields, props: FormikHelpers<typeof initialFields>) => {\n    loginUser(values.email, values.password, values.remember, values.captcha)\n    if (isMounted) {\n      props.setSubmitting(false)\n    }\n  }\n\n  return (\n    <Formik initialValues={initialFields} onSubmit={onSubmit} validationSchema={LoginSchema}>\n      {(props) => {\n        const { errors, touched, isSubmitting } = props\n        return (\n          <Form style={{ maxWidth: '500px', margin: '20px auto' }}>\n            <C.FlexWrapper $direction={'column'} $gap={'20px'} $justify={'center'} $align={'center'}>\n              <Field\n                id={'email_login'}\n                as={Input}\n                label={'E-mail *'}\n                name={'email'}\n                type={'email'}\n                placeholder={'Enter you email'}\n                error={errors.email && touched.email}\n                errorText={errors.email}\n                style={{ padding: '10px' }}\n              />\n              <Field\n                id={'password_login'}\n                as={Input}\n                label={'Password *'}\n                name={'password'}\n                type={'password'}\n                placeholder={'Enter your password'}\n                error={errors.password && touched.password}\n                errorText={errors.password}\n                style={{ padding: '10px' }}\n              />\n              <Field id={'remember_login'} as={Input} label={'Remember me'} name={'remember'} type={'checkbox'} />\n              {captcha && (\n                <Field\n                  id={'captcha_login'}\n                  as={Input}\n                  label={<img src={captcha} alt='asd' />}\n                  name={'captcha'}\n                  type={'text'}\n                  placeholder={'Enter captcha'}\n                  error={errors.captcha && touched.captcha}\n                  errorText={errors.captcha}\n                  style={{ padding: '10px' }}\n                />\n              )}\n              {error && <ErrorField>{error}</ErrorField>}\n              {isSubmitting ? (\n                <Loading />\n              ) : (\n                <Button type='submit' disabled={Object.keys(errors).length > 0}>\n                  login\n                </Button>\n              )}\n            </C.FlexWrapper>\n          </Form>\n        )\n      }}\n    </Formik>\n  )\n}\n","import { FC, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nimport { LoginForm } from './LoginForm'\r\n\r\nimport { C } from '../../app/styles/Common.styled'\r\nimport { TitleBlock } from '../../components'\r\nimport { loginUser } from '../../redux/app-reducer'\r\nimport { RootStateT } from '../../redux/store'\r\n\r\nexport const Login: FC<MapStatePT & MapDispatchPT> = ({ isAuth, captcha, error, loginUser }) => {\r\n  useEffect(() => {\r\n    document.title = 'Login'\r\n  }, [])\r\n  return isAuth ? (\r\n    <Redirect to={'/profile'} />\r\n  ) : (\r\n    <C.FlexWrapper $gap={'10px'} $direction={'column'} $justify={'center'} $shadow>\r\n      <TitleBlock title={'LOGIN'} />\r\n      <LoginForm error={error} captcha={captcha} loginUser={loginUser} />\r\n    </C.FlexWrapper>\r\n  )\r\n}\r\n\r\ninterface MapStatePT {\r\n  isAuth: boolean\r\n  captcha: string\r\n  error: string\r\n}\r\n\r\nconst mapStateToProps = (state: RootStateT): MapStatePT => ({\r\n  isAuth: state.app.isAuth,\r\n  captcha: state.app.captcha,\r\n  error: state.app.error,\r\n})\r\n\r\ninterface MapDispatchPT {\r\n  loginUser: (email: string, password: string, rememberMe: boolean, captcha: string) => any\r\n}\r\n\r\nexport default connect<MapStatePT, MapDispatchPT, unknown, RootStateT>(mapStateToProps, {\r\n  loginUser,\r\n})(Login)\r\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["LoginForm","captcha","error","loginUser","useState","isMounted","setIsMounted","useEffect","initialValues","email","password","remember","onSubmit","values","props","setSubmitting","validationSchema","LoginSchema","errors","touched","isSubmitting","style","maxWidth","margin","C","$direction","$gap","$justify","$align","id","as","Input","label","name","type","placeholder","errorText","padding","src","alt","disabled","Object","keys","length","Login","isAuth","document","title","to","$shadow","connect","state","app","_arrayLikeToArray","arr","len","i","arr2","Array","_slicedToArray","isArray","_i","Symbol","iterator","_s","_e","_arr","_n","_d","call","next","done","push","value","err","o","minLen","n","prototype","toString","slice","constructor","from","test","TypeError"],"sourceRoot":""}